// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dashboard.proto

package dashboard

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetMessage struct {
	TargetCat            string   `protobuf:"bytes,1,opt,name=target_cat,json=targetCat,proto3" json:"target_cat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessage) Reset()         { *m = GetMessage{} }
func (m *GetMessage) String() string { return proto.CompactTextString(m) }
func (*GetMessage) ProtoMessage()    {}
func (*GetMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_b79c5dc59b0450e9, []int{0}
}
func (m *GetMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessage.Unmarshal(m, b)
}
func (m *GetMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessage.Marshal(b, m, deterministic)
}
func (dst *GetMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessage.Merge(dst, src)
}
func (m *GetMessage) XXX_Size() int {
	return xxx_messageInfo_GetMessage.Size(m)
}
func (m *GetMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessage proto.InternalMessageInfo

func (m *GetMessage) GetTargetCat() string {
	if m != nil {
		return m.TargetCat
	}
	return ""
}

type Response struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 string   `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_b79c5dc59b0450e9, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMessage)(nil), "GetMessage")
	proto.RegisterType((*Response)(nil), "Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DashboardClient is the client API for Dashboard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashboardClient interface {
	Get(ctx context.Context, in *GetMessage, opts ...grpc.CallOption) (*Response, error)
}

type dashboardClient struct {
	cc *grpc.ClientConn
}

func NewDashboardClient(cc *grpc.ClientConn) DashboardClient {
	return &dashboardClient{cc}
}

func (c *dashboardClient) Get(ctx context.Context, in *GetMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Dashboard/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashboardServer is the server API for Dashboard service.
type DashboardServer interface {
	Get(context.Context, *GetMessage) (*Response, error)
}

func RegisterDashboardServer(s *grpc.Server, srv DashboardServer) {
	s.RegisterService(&_Dashboard_serviceDesc, srv)
}

func _Dashboard_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dashboard/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServer).Get(ctx, req.(*GetMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dashboard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Dashboard",
	HandlerType: (*DashboardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Dashboard_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dashboard.proto",
}

func init() { proto.RegisterFile("dashboard.proto", fileDescriptor_dashboard_b79c5dc59b0450e9) }

var fileDescriptor_dashboard_b79c5dc59b0450e9 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x49, 0x2c, 0xce,
	0x48, 0xca, 0x4f, 0x2c, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe6, 0xe2, 0x72,
	0x4f, 0x2d, 0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x92, 0xe5, 0xe2, 0x2a, 0x49, 0x2c,
	0x4a, 0x4f, 0x2d, 0x89, 0x4f, 0x4e, 0x2c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x84,
	0x88, 0x38, 0x27, 0x96, 0x28, 0x19, 0x71, 0x71, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7,
	0x0a, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x42, 0x15, 0x81, 0xd9, 0x20, 0xb1, 0xec, 0xcc,
	0xbc, 0x14, 0x09, 0x26, 0x88, 0x18, 0x88, 0x6d, 0xa4, 0xc3, 0xc5, 0xe9, 0x02, 0xb3, 0x53, 0x48,
	0x9e, 0x8b, 0xd9, 0x3d, 0xb5, 0x44, 0x88, 0x5b, 0x0f, 0x61, 0xa7, 0x14, 0xa7, 0x1e, 0xcc, 0x4c,
	0x25, 0x86, 0x24, 0x36, 0xb0, 0xab, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x56, 0x04, 0xa8,
	0x18, 0xa8, 0x00, 0x00, 0x00,
}
